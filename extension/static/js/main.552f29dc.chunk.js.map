{"version":3,"sources":["reducer.js","Form.js","misc.js","index.js","Table.js","Credits.js","App.js"],"names":["actionTypes","ADD_CREDIT","CHANGE_CREDIT","REMOVE_CREDIT","SELECT_CREDIT","RENAME_CREDIT","CALCULATE","MARK_SAVED","actions","addCredit","type","removeCredit","id","payload","selectCredit","changeCredit","field","value","renameCredit","name","calculate","markSaved","saveChanges","dispatch","getState","chrome","storage","local","set","state","selectors","store","credits","selectedId","calculation","modified","initialState","getEmptyCredit","error","data","rootReducer","arguments","length","undefined","action","Object","values","includes","objectSpread","concat","toConsumableArray","splice","Math","max","_action$payload","slice","defineProperty","_action$payload2","meta","sum","monthsNum","startDate","percent","paymentType","paymentDay","payments","key","random","toString","period","reduceType","nextPaymentType","date","Date","toISOString","Calculator","DAYS_IN_MONTH","year","month","this","isLeapYear","dateObj","getFullYear","getMonth","min","daysInMonth","credit","some","payment","Error","parseInt","getDate","i","nextDate","push","index","endDate","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","sort","a","b","parseFloat","calcAnnuity","calcDifferentiated","t","pow","toFixed","start","loan","pmt","calcAnnuityPMT","interest","nextOnlyInterest","map","obj","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","setDate","daysInYear","assign","total","balance","newMonthsNum","log","filter","lastRegularId","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Form","onChange","ev","target","checked","_this","props","addPayment","recalc","removePayment","currentTarget","dataset","changePayment","_ev$target$name$split","split","_ev$target$name$split2","slicedToArray","onSubmit","preventDefault","_this2","react_default","createElement","className","htmlFor","required","step","data-tooltip","Array","from","_","onClick","data-id","placeholder","React","Component","mapDispatchToProps","connect","formatDate","d","cb","Table","totalLoan","reduce","acc","val","totalInterest","counter","item","colSpan","MenuItem","modalOpened","toggleModal","setState","_ref","onSelect","onRemove","onRename","elements","_this$props","active","getHours","getMinutes","defaultValue","Credits","process","Credits_MenuItem","Fragment","App","src_Form","src_Credits","src_Table","rootElement","document","getElementById","ReactDOM","render","react_redux_es","src_App_0","get","console","createStore","applyMiddleware","thunkMiddleware"],"mappings":"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","file":"static/js/main.552f29dc.chunk.js","sourcesContent":["/* global chrome, process */\n\nexport const actionTypes = {\n    ADD_CREDIT: \"ADD_CREDIT\",\n    CHANGE_CREDIT: \"CHANGE_CREDIT\",\n    REMOVE_CREDIT: \"REMOVE_CREDIT\",\n    SELECT_CREDIT: \"SELECT_CREDIT\",\n    RENAME_CREDIT: \"RENAME_CREDIT\",\n    CALCULATE: \"CALCULATE\",\n    MARK_SAVED: \"MARK_SAVED\",\n};\n\nexport const actions = {\n    addCredit: () => ({\n        type: actionTypes.ADD_CREDIT,\n    }),\n    removeCredit: (id) => ({\n        type: actionTypes.REMOVE_CREDIT,\n        payload: {id},\n    }),\n    selectCredit: (id) => ({\n        type: actionTypes.SELECT_CREDIT,\n        payload: {id}\n    }),\n    changeCredit: (field, value) => ({\n        type: actionTypes.CHANGE_CREDIT,\n        payload: {field, value}\n    }),\n    renameCredit: (id, name) => ({\n        type: actionTypes.RENAME_CREDIT,\n        payload: {id, name}\n    }),\n    calculate: () => ({\n        type: actionTypes.CALCULATE\n    }),\n    markSaved: () => ({\n        type: actionTypes.MARK_SAVED\n    }),\n    saveChanges: () => (dispatch, getState) => {\n        if (process.env.NODE_ENV === \"development\")\n            dispatch(actions.markSaved());\n        else\n            chrome.storage.local.set(\n                {state: getState()},\n                () => dispatch(actions.markSaved())\n            );\n    }\n};\n\nexport const selectors = {\n    getCredits: store => store.credits,\n    getSelectedId: store => store.selectedId,\n    getSelectedCredit: store => store.credits[store.selectedId],\n    getCalculation: store => store.calculation,\n    getModified: store => store.modified\n};\n\nconst initialState = {\n    credits: [getEmptyCredit(), getEmptyCredit(), getEmptyCredit()],\n    selectedId: 0,\n    calculation: {error: null, data: []},\n    modified: false,\n};\n\nexport default function rootReducer(state = initialState, action) {\n    if (Object.values(actionTypes).includes(action.type) && action.type !== actionTypes.MARK_SAVED)\n        state = {...state, modified: true};\n\n    switch (action.type) {\n        case actionTypes.ADD_CREDIT: {\n            const credits = [...state.credits, getEmptyCredit()];\n            return {...state, credits};\n        }\n        case actionTypes.REMOVE_CREDIT: {\n            const {id} = action.payload;\n            const credits = [...state.credits];\n\n            if (credits.length > 1) {\n                credits.splice(id, 1);\n\n                let selectedId = state.selectedId;\n                if (selectedId >= id)\n                    selectedId = Math.max(0, selectedId - 1);\n\n                return {...state, credits, selectedId};\n            }\n\n            return state;\n        }\n        case actionTypes.SELECT_CREDIT: {\n            const {id} = action.payload;\n\n            const credit = state.credits[id];\n            const calculation = calculate(credit);\n\n            return {...state, selectedId: id, calculation};\n        }\n        case actionTypes.CHANGE_CREDIT: {\n            const {field, value} = action.payload;\n            const selectedId = state.selectedId;\n            const credits = state.credits.slice();\n            credits[selectedId] = {...credits[selectedId], [field]: value};\n            return {...state, credits}\n        }\n        case actionTypes.RENAME_CREDIT: {\n            const {id, name} = action.payload;\n            const credits = [...state.credits];\n            credits[id] = {...credits[id], meta: {...credits[id].meta, name}};\n            return {...state, credits};\n        }\n        case actionTypes.CALCULATE: {\n            const credit = state.credits[state.selectedId];\n            const calculation = calculate(credit);\n            return {...state, calculation};\n        }\n        case actionTypes.MARK_SAVED: {\n            return {...state, modified: false}\n        }\n        default:\n            return state;\n    }\n}\n\nfunction getEmptyCredit() {\n    return {\n        sum: \"2224000\",\n        monthsNum: \"84\",\n        startDate: \"2019-04-29\",\n        percent: \"10.8\",\n        paymentType: \"annuity\",\n        paymentDay: \"issue_day\",\n        // firstPaymentOnlyPercents: false,\n        payments: [\n            {\n                key: Math.random().toString(36).slice(2),\n                period: \"0\",\n                reduceType: \"reduce_period\",\n                startDate: \"2019-05-21\",\n                sum: \"42700\",\n                nextPaymentType: \"only_interest\"\n            },\n            {\n                key: Math.random().toString(36).slice(2),\n                period: \"0\",\n                reduceType: \"reduce_period\",\n                startDate: \"2019-06-20\",\n                sum: \"44200\",\n                nextPaymentType: \"only_interest\"\n            },\n            {\n                key: Math.random().toString(36).slice(2),\n                period: \"0\",\n                reduceType: \"reduce_period\",\n                startDate: \"2019-07-26\",\n                sum: \"308450\",\n                nextPaymentType: \"only_interest\"\n            },\n            {\n                key: Math.random().toString(36).slice(2),\n                period: \"0\",\n                reduceType: \"reduce_period\",\n                startDate: \"2019-08-20\",\n                sum: \"55125\",\n                nextPaymentType: \"only_interest\"\n            },\n            {\n                key: Math.random().toString(36).slice(2),\n                period: \"0\",\n                reduceType: \"reduce_sum\",\n                startDate: \"2019-09-10\",\n                sum: \"120000\",\n                nextPaymentType: \"only_interest\"\n            }\n        ],\n        meta: {\n            key: Math.random().toString(36).slice(2),\n            name: \"Новый расчет\",\n            date: new Date().toISOString()\n        }\n    };\n}\n\nclass Calculator {\n    DAYS_IN_MONTH = [31, undefined, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    isLeapYear(year) {\n        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n    }\n\n    daysInMonth(month, year) {\n        if (month !== /* Feb */ 1)\n            return this.DAYS_IN_MONTH[month];\n        return this.isLeapYear(year) ? 29 : 28;\n    }\n\n    daysInYear(year) {\n        return this.isLeapYear(year) ? 366 : 365;\n    }\n\n    nextDate(dateObj, paymentDay) {\n        const year = dateObj.getFullYear();\n        const month = dateObj.getMonth() + 1;\n        const date = Math.min(paymentDay, this.daysInMonth(month % 12, dateObj.getFullYear()));\n        return new Date(year, month, date);\n    }\n\n    calculate(credit) {\n        if (!credit.sum || !credit.monthsNum || !credit.percent || !credit.startDate ||\n            credit.payments.some(payment => !payment.startDate || !payment.sum))\n            throw Error(\"Не все необходимые поля заполнены\");\n\n        const monthsNum = parseInt(credit.monthsNum, 10);\n        const startDate = new Date(credit.startDate);\n\n        let paymentDay = null;\n        switch (credit.paymentDay) {\n            case 'issue_day': paymentDay = startDate.getDate(); break;\n            case 'last_day_of_month': paymentDay = 31; break;\n            default: paymentDay = parseInt(credit.paymentDay, 10);\n        }\n\n        const payments = [];\n        for (let i = 1, date = new Date(startDate); i <= monthsNum; ++i) {\n            date = this.nextDate(date, paymentDay);\n            payments.push({type: 'regular', date, index: i});\n        }\n\n        let endDate = payments[payments.length-1].date;\n        for (const payment of credit.payments) {\n            let date = new Date(payment.startDate);\n            paymentDay = date.getDate();\n            const sum = parseInt(payment.sum, 10);\n            const period = parseInt(payment.period, 10);\n            const {reduceType, nextPaymentType} = payment;\n\n            while (date < endDate) {\n                payments.push({type: 'extra', date, sum, reduceType, nextPaymentType});\n                if (period > 0) {\n                    for (let i = 0; i < period; ++i)\n                        date = this.nextDate(date, paymentDay);\n                } else\n                    break;\n            }\n        }\n\n        payments.sort((a, b) => a.date - b.date);\n\n        const sum = parseInt(credit.sum, 10);\n        const percent = parseFloat(credit.percent)/100;\n\n        return credit.paymentType === \"annuity\"\n               ? this.calcAnnuity(sum, monthsNum, percent, startDate, payments)\n               : this.calcDifferentiated(sum, monthsNum, percent, startDate, payments);\n    }\n\n    calcAnnuityPMT(sum, monthsNum, percent) {\n        const t = percent / 12;\n        return parseFloat((sum * (t + t/(Math.pow((1 + t), monthsNum) - 1))).toFixed(2));\n    }\n\n    calcAnnuity(sum, monthsNum, percent, start, payments) {\n        let pmt = this.calcAnnuityPMT(sum, monthsNum, percent),\n            date = new Date(start),\n            loan, interest = 0,\n            nextOnlyInterest = false;\n        payments = payments.map(obj => ({...obj}));\n\n        for (const payment of payments) {\n            if (sum <= 0)\n                break;\n\n            while (+date < +payment.date) {\n                date.setDate(date.getDate() + 1);\n                interest += sum * percent / this.daysInYear(date.getFullYear());\n            }\n\n            if (payment.type === \"extra\" && payment.sum < interest) {\n                payment.error = 'Внесенной суммы досрочного погашения недостаточно для уплаты процентов. Платеж не засчитан.';\n                continue;\n            }\n\n            interest = parseFloat(interest.toFixed(2));\n            loan = nextOnlyInterest ? 0 : Math.min((payment.sum || pmt) - interest, sum);\n            sum -= loan;\n            Object.assign(payment, {interest, loan, total: interest + loan, balance: sum});\n            interest = 0;\n\n            if (payment.type === \"regular\") {\n                nextOnlyInterest = false;\n            } else {\n                if (payment.reduceType === \"reduce_sum\") {\n                    // const newMonthsNum = monthsNum - lastRegularId;\n                    const t = percent / 12;\n                    const newMonthsNum = Math.log(pmt/(pmt - (sum + loan) * t))/Math.log(1 + t) - 1;\n                    pmt = this.calcAnnuityPMT(sum, newMonthsNum, percent);\n                }\n                if (payment.nextPaymentType === \"only_interest\")\n                    nextOnlyInterest = true;\n            }\n        }\n\n        if (sum > 0) {\n            const payment = payments[payments.length-1];\n            payment.loan += sum;\n            payment.total += sum;\n            payment.balance = 0;\n        }\n\n        return payments\n            .filter(payment => !!payment.total)\n            .map(payment => ({...payment, date: payment.date.toISOString()}))\n    }\n\n    calcDifferentiated(sum, monthsNum, percent, start, payments) {\n        let pmt = parseFloat((sum / monthsNum).toFixed(2)),\n            date = new Date(start),\n            interest = 0,\n            lastRegularId = 1,\n            nextOnlyInterest = false;\n        payments = payments.map(obj => ({...obj}));\n\n        for (const payment of payments) {\n            if (sum <= 0)\n                break;\n\n            while (+date < +payment.date) {\n                date.setDate(date.getDate() + 1);\n                interest += sum * percent / this.daysInYear(date.getFullYear());\n            }\n\n            interest = parseFloat(interest.toFixed(2));\n            let loan = null;\n            if (payment.type === \"regular\") {\n                loan = nextOnlyInterest ? 0 : Math.min(pmt, sum);\n            } else {\n                if (payment.sum < interest) {\n                    payment.error = 'Внесенной суммы досрочного погашения недостаточно для уплаты процентов. Платеж не засчитан.';\n                    continue;\n                } else {\n                    loan = Math.min(payment.sum - interest, sum);\n                }\n            }\n\n            sum -= loan;\n            Object.assign(payment, {interest, loan, total: interest + loan, balance: sum});\n            interest = 0;\n\n            if (payment.type === \"regular\") {\n                lastRegularId = payment.index;\n                nextOnlyInterest = false;\n            } else {\n                if (payment.reduceType === \"reduce_sum\")\n                    pmt = parseFloat((sum / (monthsNum - lastRegularId)).toFixed(2));\n                if (payment.nextPaymentType === \"only_interest\")\n                    nextOnlyInterest = true;\n            }\n        }\n\n        if (sum > 0) {\n            const payment = payments[payments.length-1];\n            payment.loan += sum;\n            payment.total += sum;\n            payment.balance = 0;\n        }\n\n        return payments\n            .filter(payment => !!payment.total)\n            .map(payment => ({...payment, date: payment.date.toISOString()}))\n    }\n}\n\nfunction calculate(credit) {\n    try {\n        const data = new Calculator().calculate(credit);\n        return {error: null, data};\n    } catch (error) {\n        return {error, data: []};\n    }\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {selectors, actions} from \"./reducer\";\n\n\nclass Form extends React.Component {\n    onChange = (ev) => {\n        const field = ev.target.name;\n        const value = ev.target.type === \"checkbox\" ? ev.target.checked : ev.target.value;\n        this.props.changeCredit(field, value);\n    };\n\n    addPayment = () => {\n        const payments = this.props.credit.payments.slice();\n        payments.push({\n            key: Math.random().toString(36).slice(2),\n            period: \"\", recalc: \"1\", date: \"\", next: \"0\", sum: \"\"\n        });\n        this.onChange({target: {name: 'payments', value: payments}});\n    };\n    removePayment = (ev) => {\n        const id = parseInt(ev.currentTarget.dataset.id, 10);\n        const payments = this.props.credit.payments.slice();\n        payments.splice(id, 1);\n        this.onChange({target: {name: 'payments', value: payments}});\n    };\n    changePayment = (ev) => {\n        const [_, i, field] = ev.target.name.split('.');\n        const payments = this.props.credit.payments.slice();\n        const index = parseInt(i, 10);\n        payments[index] = {...payments[index], [field]: ev.target.value};\n        this.onChange({target: {name: 'payments', value: payments}});\n    };\n\n    onSubmit = (ev) => {\n        ev.preventDefault();\n        this.props.calculate();\n    };\n\n    render() {\n        const credit = this.props.credit;\n\n        return (\n            <form id=\"form\">\n                <div className=\"form-horizontal\">\n                    <div className=\"form-group\">\n                        <div className=\"col-4 col-sm-12\">\n                            <label className=\"form-label\" htmlFor=\"sum\">Сумма кредита (руб.)</label>\n                        </div>\n                        <div className=\"col-8 col-sm-12 d-flex\">\n                            <input required type=\"number\" min=\"0\" step=\"1\" name=\"sum\" id=\"sum\" className=\"form-input\" value={credit.sum} onChange={this.onChange}/>\n                            <span className=\"ml-2 text-nowrap\">рублей</span>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-4 col-sm-12\">\n                            <label className=\"form-label\" htmlFor=\"monthsNum\">Срок кредита</label>\n                        </div>\n                        <div className=\"col-8 col-sm-12 d-flex\">\n                            <input required type=\"number\" min=\"0\" step=\"1\" name=\"monthsNum\" id=\"monthsNum\" className=\"form-input\" value={credit.monthsNum} onChange={this.onChange}/>\n                            <span className=\"ml-2 text-nowrap\">месяцев</span>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-4 col-sm-12\">\n                            <label className=\"form-label\" htmlFor=\"startDate\">Дата выдачи кредита</label>\n                        </div>\n                        <div className=\"col-8 col-sm-12\">\n                            <input required type=\"date\" id=\"startDate\" name=\"startDate\" className=\"form-input\" value={credit.startDate} onChange={this.onChange}/>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-4 col-sm-12\">\n                            <label className=\"form-label\" htmlFor=\"percent\">Процентная ставка</label>\n                        </div>\n                        <div className=\"col-8 col-sm-12 d-flex\">\n                            <input required type=\"number\" min=\"0\" step=\"0.1\" name=\"percent\" id=\"percent\" className=\"form-input\" value={credit.percent} onChange={this.onChange}/>\n                            <span className=\"ml-2 text-nowrap\">% годовых</span>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-4 col-sm-12\">\n                            <label className=\"form-label\" htmlFor=\"paymentType\">Вид платежа</label>\n                        </div>\n                        <div className=\"col-8 col-sm-12\">\n                            <label className=\"form-radio form-inline tooltip\" data-tooltip=\"Аннуитетный платеж – вариант ежемесячного платежа по кредиту, когда размер ежемесячного платежа остаётся постоянным на всём периоде кредитования.\">\n                                <input type=\"radio\" name=\"paymentType\" value=\"annuity\" checked={credit.paymentType === \"annuity\"} onChange={this.onChange}/><i className=\"form-icon\"/> Аннуитетный\n                            </label>\n                            <label className=\"form-radio form-inline tooltip\" data-tooltip=\"Дифференцированный платеж – вариант ежемесячного платежа по кредиту, когда размер ежемесячного платежа по погашению кредита постепенно уменьшается к концу периода кредитования.\">\n                                <input type=\"radio\" name=\"paymentType\" value=\"differentiated\" checked={credit.paymentType === \"differentiated\"} onChange={this.onChange}/><i className=\"form-icon\"/> Дифференцированный\n                            </label>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div className=\"col-4 col-sm-12\">\n                            <label className=\"form-label\" htmlFor=\"paymentDay\">Ежемесячные платежи</label>\n                        </div>\n                        <div className=\"col-8 col-sm-12\">\n                            <select name=\"paymentDay\" className=\"form-select\" value={credit.paymentDay} onChange={this.onChange}>\n                                <option value=\"issue_day\">в день выдачи кредита</option>\n                                <option value=\"last_day_of_month\">в последний день месяца</option>\n                                {Array.from({length: 28}, (_, i) =>\n                                    <option key={i+1} value={i+1}>{i+1}-е число каждого месяца</option>\n                                )}\n                            </select>\n                            {/*<label className=\"form-checkbox\">*/}\n                            {/*    <input type=\"checkbox\" name=\"firstPaymentOnlyPercents\" checked={credit.firstPaymentOnlyPercents} onChange={this.onChange}/><i className=\"form-icon\"/> Первый платеж - только проценты*/}\n                            {/*</label>*/}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label className=\"form-label\">Досрочные погашения</label>\n                    {credit.payments.map((payment, i) =>\n                        <div key={payment.key} className=\"payment d-flex\">\n                            <div className=\"payment-id mr-2\">{i+1}.</div>\n                            <div key={payment.key} className=\"payment-fields columns\">\n                                <div className=\"column col-3\">\n                                    <select name={`payment.${i}.period`} className=\"form-select\" value={payment.period} onChange={this.changePayment}>\n                                        <option value=\"0\">Разовый</option>\n                                        <option value=\"1\">Раз в месяц</option>\n                                        <option value=\"2\">Раз в 2 месяца</option>\n                                        <option value=\"3\">Раз в 3 месяца</option>\n                                        <option value=\"6\">Раз в полгода</option>\n                                        <option value=\"12\">Раз в год</option>\n                                    </select>\n                                </div>\n                                <div className=\"column col-5\">\n                                    <select name={`payment.${i}.reduceType`} className=\"form-select\" value={payment.reduceType} onChange={this.changePayment}>\n                                        <option value=\"reduce_period\">Уменьшить срок кредита</option>\n                                        <option value=\"reduce_sum\">Уменьшить ежемесячный платеж</option>\n                                    </select>\n                                </div>\n                                <div className=\"column col-4 d-flex\">\n                                    <input required type=\"date\" name={`payment.${i}.startDate`} className=\"form-input\" value={payment.startDate} onChange={this.changePayment}/>\n                                    <button type=\"button\" className=\"btn btn-action ml-2\" onClick={this.removePayment} data-id={i}><i className=\"icon icon-cross\"/></button>\n                                </div>\n                                <div className=\"column col-3 mt-2\">\n                                    <input required type=\"number\" min=\"0\" step=\"1\" name={`payment.${i}.sum`} className=\"form-input\" placeholder=\"Сумма\" value={payment.sum} onChange={this.changePayment}/>\n                                </div>\n                                <div className=\"column col-9 mt-2\">\n                                    <select name={`payment.${i}.nextPaymentType`} className=\"form-select\" value={payment.nextPaymentType} onChange={this.changePayment}>\n                                        <option value=\"no_changes\">Следующий платеж - без изменений</option>\n                                        <option value=\"only_interest\">Следующий платеж - только проценты</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    <button type=\"button\" id=\"add-button\" className=\"btn btn-link btn-sm\" onClick={this.addPayment}><i className=\"icon icon-plus\"/> Добавить досрочный платеж</button>\n                </div>\n\n                <div className=\"divider\"/>\n\n                <div className=\"form-horizontal\">\n                    <div className=\"form-group\">\n                        <div className=\"col-4 col-sm-12\">\n                            <label className=\"form-label\"/>\n                        </div>\n                        <div className=\"col-8 col-sm-12\">\n                            <button type=\"submit\" id=\"submit-button\" className=\"btn btn-primary\" onClick={this.onSubmit}>Рассчитать</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    credit: selectors.getSelectedCredit(store)\n});\n\nconst mapDispatchToProps = {\n    changeCredit: actions.changeCredit,\n    calculate: actions.calculate\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","export function formatDateTime(d) {\n    d = new Date(d);\n    return (\n        (\"0\" + d.getDate()).slice(-2) + \".\" + (\"0\"+(d.getMonth()+1)).slice(-2) + \".\" + d.getFullYear() + \" \" +\n        (\"0\" + d.getHours()).slice(-2) + \":\" + (\"0\" + d.getMinutes()).slice(-2)\n    );\n}\n\nexport function formatDate(d) {\n    d = new Date(d);\n    return (\n        (\"0\" + d.getDate()).slice(-2) + \".\" + (\"0\"+(d.getMonth()+1)).slice(-2) + \".\" + d.getFullYear()\n    );\n}","/* global chrome */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './reducer';\nimport App from './App';\n\n// import * as serviceWorker from './serviceWorker';\n\n\nfunction hydrate(cb) {\n    if (process.env.NODE_ENV === \"development\")\n        cb(createStore(rootReducer, applyMiddleware(thunkMiddleware)));\n    else {\n        chrome.storage.local.get('state', function (data) {\n            console.log(data.state);\n            cb(createStore(rootReducer, /* initialState */ data.state, applyMiddleware(thunkMiddleware)));\n        });\n    }\n}\n\nhydrate(function(store) {\n    const rootElement = document.getElementById('root');\n    ReactDOM.render(\n        <Provider store={store}><App/></Provider>,\n        rootElement\n    );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {selectors} from \"./reducer\";\nimport {formatDate} from './misc';\n\nclass Table extends React.Component {\n    render() {\n        const calculation = this.props.calculation;\n\n        if (calculation.error)\n            return (\n                <div id=\"error\" className=\"toast toast-error\">\n                    {calculation.error.toString()}\n                </div>\n            );\n\n        if (calculation.data.length === 0)\n            return null;\n\n        const totalLoan = calculation.data.reduce((acc, val) => acc + val.loan || 0, 0).toFixed(2);\n        const totalInterest = calculation.data.reduce((acc, val) => acc + val.interest || 0, 0).toFixed(2);\n        const total = calculation.data.reduce((acc, val) => acc + val.total || 0, 0).toFixed(2);\n\n        let counter = 0;\n\n        return (\n            <div id=\"table-wrapper\">\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th>№</th>\n                        <th>Дата</th>\n                        <th>Платеж по основному долгу</th>\n                        <th>Платеж по процентам</th>\n                        <th>Сумма платежа</th>\n                        <th>Остаток основного долга</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {calculation.data.map((item, i) => item.error\n                        ? <tr key={i} className='text-error'>\n                            <td>{item.type === 'regular' ? ++counter : null}</td>\n                            <td>{formatDate(item.date)}</td>\n                            <td colSpan={4}>{item.error}</td>\n                        </tr>\n                        : <tr key={i} className={item.type === 'extra' ? 'text-success' : null}>\n                            <td>{item.type === 'regular' ? ++counter : null}</td>\n                            <td>{formatDate(item.date)}</td>\n                            <td>{item.loan.toFixed(2)}</td>\n                            <td>{item.interest.toFixed(2)}</td>\n                            <td>{item.total.toFixed(2)}</td>\n                            <td>{item.balance.toFixed(2)}</td>\n                        </tr>\n                    )}\n                    <tr>\n                        <td/>\n                        <td/>\n                        <td>\n                            <span className=\"text-bold\">{totalLoan}</span>\n                            <br/>\n                            <span className=\"text-gray\">(Сумма выплаченного долга)</span>\n                        </td>\n                        <td>\n                            <span className=\"text-bold\">{totalInterest}</span>\n                            <br/>\n                            <span className=\"text-gray\">(Сумма выплаченных процентов)</span>\n                        </td>\n                        <td>\n                            <span className=\"text-bold\">{total}</span>\n                            <br/>\n                            <span className=\"text-gray\">(Выплачено всего)</span>\n                        </td>\n                        <td/>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    calculation: selectors.getCalculation(store)\n});\n\nexport default connect(mapStateToProps, null)(Table);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {selectors, actions} from './reducer';\nimport {formatDateTime} from './misc';\n\nclass MenuItem extends React.Component {\n    state = {modalOpened: false};\n\n    toggleModal = () => this.setState(({modalOpened}) => ({modalOpened: !modalOpened}));\n\n    onSelect = () => this.props.onSelect(this.props.index);\n    onRemove = () => this.props.onRemove(this.props.index);\n    onRename = (ev) => {\n        ev.preventDefault();\n        this.props.onRename(this.props.index, ev.target.elements[0].value);\n        this.toggleModal();\n    };\n\n    render() {\n        const {credit, active} = this.props;\n\n        return (\n            <li key={credit.meta.key} className=\"menu-item c-hand\">\n                <a className={active ? 'active' : undefined} onClick={this.onSelect}>\n                    {credit.meta.name}\n                </a>\n                <div className=\"menu-badge\">\n                    <span className=\"text-gray mr-2\" onClick={this.onSelect}>{formatDateTime(credit.meta.date)}</span>\n                    <button type=\"button\" className=\"btn btn-sm btn-action mr-1\" onClick={this.toggleModal}>\n                        <i className=\"icon icon-edit\"/>\n                    </button>\n                    <button type=\"button\" className=\"btn btn-sm btn-action\" onClick={this.onRemove}>\n                        <i className=\"icon icon-cross\"/>\n                    </button>\n                </div>\n\n                {this.state.modalOpened &&\n                <div className=\"modal active\">\n                    <span className=\"modal-overlay\" onClick={this.toggleModal}/>\n                    <form className=\"modal-container\" onSubmit={this.onRename}>\n                        <div className=\"modal-header\">\n                            <div className=\"modal-title h5\">Название</div>\n                        </div>\n                        <div className=\"modal-body\">\n                            <input required type=\"text\" className=\"form-input\" defaultValue={credit.meta.name}/>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                                Сохранить\n                            </button>\n                            <button type=\"button\" className=\"btn btn-link\" onClick={this.toggleModal}>\n                                Закрыть\n                            </button>\n                        </div>\n                    </form>\n                </div>}\n            </li>\n        );\n    }\n}\n\nclass Credits extends React.Component {\n    render() {\n        return (\n            <ul id=\"credits-list\" className=\"menu\">\n                <li className=\"menu-item\">\n                    <h3>Расчеты</h3>\n                    <span id=\"app-version\" className=\"text-gray\">{process.env.REACT_APP_VERSION}</span>\n                </li>\n                <li className=\"divider\"/>\n                {this.props.credits.map((credit, index) =>\n                    <MenuItem key={credit.meta.key}\n                              credit={credit} index={index}\n                              active={index === this.props.selectedId}\n                              onSelect={this.props.selectCredit}\n                              onRemove={this.props.removeCredit}\n                              onRename={this.props.renameCredit}\n                    />\n                )}\n                <li className=\"divider\"/>\n                <li className=\"menu-item c-hand\">\n                    <a onClick={this.props.addCredit}>\n                        <i className=\"icon icon-plus\"/> Создать новый расчет\n                    </a>\n                </li>\n                {this.props.modified &&\n                    <React.Fragment>\n                        <li className=\"divider\"/>\n                        <li className=\"menu-item c-hand\">\n                            <a onClick={this.props.saveChanges}>\n                                <i className=\"icon icon-check\"/> Сохранить изменения\n                            </a>\n                        </li>\n                    </React.Fragment>\n                }\n            </ul>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    credits: selectors.getCredits(store),\n    selectedId: selectors.getSelectedId(store),\n    modified: selectors.getModified(store)\n});\n\nconst mapDispatchToProps = {\n    addCredit: actions.addCredit,\n    removeCredit: actions.removeCredit,\n    selectCredit: actions.selectCredit,\n    renameCredit: actions.renameCredit,\n    saveChanges: actions.saveChanges\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Credits);","import React from 'react';\n\nimport Form from './Form';\nimport Table from './Table';\nimport Credits from './Credits';\n\nimport './App.scss';\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"columns\">\n                <div className=\"column col-8\">\n                    <Form />\n                </div>\n                <div className=\"column col-4\">\n                    <Credits />\n                </div>\n                <div className=\"column col-12\">\n                    <Table />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"],"sourceRoot":""}